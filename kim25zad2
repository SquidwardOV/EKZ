#include <iostream>

struct Node {
    int elem;
    Node* next;

    Node(int value) : elem(value), next(nullptr) {}
};

Node* createList(int* arr, int size) {
    if (size == 0) {
        return nullptr;
    }

    Node* head = new Node(arr[0]);
    Node* current = head;

    for (int i = 1; i < size; i++) {
        current->next = new Node(arr[i]);
        current = current->next;
    }

    return head;
}

void deleteList(Node* head) {
    while (head != nullptr) {
        Node* temp = head;
        head = head->next;
        delete temp;
    }
}

double findAverage(Node* head) {
    int sum = 0;
    int count = 0;

    Node* current = head;
    while (current != nullptr) {
        sum += current->elem;
        count++;
        current = current->next;
    }

    if (count == 0) {
        return 0;
    }

    return static_cast<double>(sum) / count;
}

int main() {
    int arr[] = { 1, 2, 3, 4, 5 };
    int size = sizeof(arr) / sizeof(arr[0]);

    Node* head = createList(arr, size);
    double average = findAverage(head);

    std::cout << "Среднее арифметическое: " << average << std::endl;

    deleteList(head);

    return 0;
}
